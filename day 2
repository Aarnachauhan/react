/*
Challenge: Starting from scratch, build and render the 
HTML for our section project. Check the Google slide for 
what you're trying to build.

We'll be adding more styling to it later.

Hints:
* The React logo is a file in the project tree, so you can
  access it by using `src="react-logo.png"` in your image
  element
* You can also set the `width` attribute of the image element
  just like in HTML. In the slide, I have it set to 40px
 */
import { createRoot } from "react-dom/client"
import { createElement } from "react"

const root= createRoot(document.getElementById("root"))
root.render(
    <main>
    <img src="react-logo.png" width="40px" alt="React logo" />
    <h1> Fun facts about React </h1>
    <ul>
    <li>Was first released in 2013 </li>
    <li> Was originally created by Jordan Walke </li>
    <li> Has well 100K stars on Github</li>
    <li>Is maintained by Meta </li>
    <li> Powers thousands of enterprise apps, including mobile apps</li>
    
    </ul>
    
    </main>
)
---------------------------------------------------------------------------------
  1. Where does React put all of the elements I create in JSX when I 
   call `root.render()`?

All the elements I render get put inside the div with the id of "root"
(or whatever other element I might select when calling createRoot)


2. What would show up in my console if I were to run this line of code:
```
console.log(<h1>Hello world!</h1>)
```
An object!
3. What's wrong with this code:
```
root.render(
    <section>
        <h1>Hi there</h1>
        <p>This is my website!</p>
    </section>
)
```
You can only render 1 parent element at a time. That parent element can have
as many children elements as you want.


4. What does it mean for something to be "declarative" instead of "imperative"?
*Imperative* means we need to give specific step-by-step instructions on how to
accomplish a task.
*Declarative* means we can write our code to simply "describe" *what* should show up
on the page and allow the rool (React, e.g.) to handle the details on *how* to 
put those things on the page.
5. What does it mean for something to be "composable"?
We have small pieces that we can put together to make something
larger or greater than the individual pieces themselves.
---------------------------------------------------------------------------------------
  custom elements 
  import { createRoot } from "react-dom/client"
const root = createRoot(document.getElementById("root"))

root.render(
    <TemporaryName />
)

function TemporaryName() {
    return (
        <main>
            <img src="react-logo.png" width="40px" alt="React logo" />
            <h1>Fun facts about React!</h1>
            <ul>
                <li>Was first release in 2013</li>
                <li>Was originally created by Jordan Walke</li>
                <li>Has well over 200K stars on GitHub</li>
                <li>Is maintained by Meta</li>
                <li>Powers thousands of enterprise apps, including mobile apps</li>
            </ul>
        </main>
    )
}
----------------------------------------------------------------------------------------
  
  
